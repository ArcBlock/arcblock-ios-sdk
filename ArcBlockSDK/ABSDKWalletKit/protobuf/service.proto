syntax = "proto3";
package ocap;

import "tx.proto";
import "rpc.proto";

service Query {
  // tx related
  rpc getTx(stream RequestGetTx) returns (stream ResponseGetTx);
  rpc getBlock(stream RequestGetBlock) returns (stream ResponseGetBlock);
  rpc getBlocks(RequestGetBlocks) returns (ResponseGetBlocks);
  rpc getUnconfirmedTxs(RequestGetUnconfirmedTxs) returns (ResponseGetUnconfirmedTxs);

  // utility
  rpc getChainInfo(RequestGetChainInfo) returns (ResponseGetChainInfo);
  rpc getNodeInfo(RequestGetNodeInfo) returns (ResponseGetNodeInfo);
  rpc getNetInfo(RequestGetNetInfo) returns (ResponseGetNetInfo);
  rpc getValidatorsInfo(RequestGetValidatorsInfo) returns (ResponseGetValidatorsInfo);
  rpc getConfig(RequestGetConfig) returns (ResponseGetConfig);
  rpc getHealthStatus(RequestGetHealthStatus) returns (ResponseGetHealthStatus);

  // state related
  rpc getAccountState(stream RequestGetAccountState) returns (stream ResponseGetAccountState);
  rpc getAssetState(stream RequestGetAssetState) returns (stream ResponseGetAssetState);
  rpc getFactoryState(stream RequestGetFactoryState) returns (stream ResponseGetFactoryState);
  rpc getForgeState(RequestGetForgeState) returns (ResponseGetForgeState);
  rpc getSwapState(stream RequestGetSwapState) returns (stream ResponseGetSwapState);
  rpc getDelegateState(stream RequestGetDelegateState) returns (stream ResponseGetDelegateState);
  rpc getTokenState(stream RequestGetTokenState) returns (stream ResponseGetTokenState);

  // For client side
  rpc getAccountTokens(stream RequestGetAccountTokens) returns (stream ResponseGetAccountTokens);

  // stats
  rpc getForgeStats(RequestGetForgeStats) returns (ResponseGetForgeStats);
  rpc getSwapStatistics(RequestGetSwapStatistics) returns (ResponseGetSwapStatistics);

  // indexdb
  rpc listTransactions(RequestListTransactions) returns (ResponseListTransactions);
  rpc listAssets(RequestListAssets) returns (ResponseListAssets);
  rpc listFactories(RequestListFactories) returns (ResponseListFactories);
  rpc listStakes(RequestListStakes) returns (ResponseListStakes);
  rpc listAccount(RequestListAccount) returns (ResponseListAccount);
  rpc listTopAccounts(RequestListTopAccounts) returns (ResponseListTopAccounts);
  rpc listAssetTransactions(RequestListAssetTransactions) returns (ResponseListAssetTransactions);
  rpc listBlocks(RequestListBlocks) returns (ResponseListBlocks);
  rpc listTokens(RequestListTokens) returns (ResponseListTokens);
  rpc listSwap(RequestListSwap) returns (ResponseListSwap);

  // Do not worry about this, it will be removed during build phase
  rpc itxSub(RequestGetConfig) returns (ItxStub);
}

service Mutation {
  rpc sendTx(RequestSendTx) returns (ResponseSendTx);
  rpc unsubscribe(RequestUnsubscribe) returns (ResponseUnsubscribe);
}

service Subscription {
  rpc subscribe(RequestSubscribe) returns (stream ResponseSubscribe);
}
